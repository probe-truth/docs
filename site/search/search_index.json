{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ProbeTruth Documentation","text":""},{"location":"#overview","title":"Overview","text":"<p>ProbeTruth is an advanced AI-driven platform designed to detect deepfakes and combat digital identity fraud. Our flagship solution, DeepTect, leverages NeuroSymbolic AI and multimodal techniques to ensure transparency and accuracy in verifying digital content.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Comprehensive Detection Capabilities: Identifies basic, partial, shallow, and complex deepfakes across various media formats.</li> <li>Explainable Reporting: Generates detailed, transparent, and defensible reports that are easily understood.</li> <li>Security-First Architecture: Built with robust security measures to guard against manipulation and ensure data integrity.</li> <li>User-Centric Design: Offers intuitive interfaces and workflows tailored for legal professionals, organizations, and individuals.</li> <li>Collaborative Integration: Works seamlessly with governments, businesses, and research institutions to set global standards in digital content verification.</li> </ul>"},{"location":"#use-cases","title":"Use Cases","text":"<ul> <li>Legal and Forensic Analysis: Assisting legal professionals in verifying the authenticity of digital evidence.</li> <li>Media and Journalism: Helping journalists and media outlets detect and prevent the spread of manipulated content.</li> <li>Corporate Security: Enabling businesses to protect against digital identity fraud and misinformation.</li> <li>Public Sector Applications: Supporting government agencies in safeguarding public information and communications.</li> </ul>"},{"location":"#accessing-probetruth","title":"Accessing ProbeTruth","text":"<p>To learn more about our services or to schedule a demo, visit our About Us page or contact us at demo@probetruth.ai.</p>"},{"location":"contact/","title":"Contact Us","text":"<p>We\u2019d love to hear from you! Whether you\u2019re interested in our services, have questions about our platform, or want to collaborate \u2014 feel free to get in touch.</p>"},{"location":"contact/#general-inquiries","title":"General Inquiries","text":"<p>For general questions, partnership opportunities, or media inquiries, reach out to:</p> <p>Email: contact@probetruth.ai</p>"},{"location":"contact/#research-collaborations","title":"Research Collaborations","text":"<p>If you're from academia or a research institution and are interested in working together on deepfake detection, AI security, or related topics:</p> <p>Email: research@probetruth.ai</p>"},{"location":"contact/#business-enterprise-solutions","title":"Business &amp; Enterprise Solutions","text":"<p>For enterprise support, custom integrations, or bulk analysis options, please contact:</p> <p>Email: business@probetruth.ai</p>"},{"location":"contact/#office-location","title":"Office Location","text":"<p>ProbTruth Inc. Tower Plaza 555 E William St, Ann Arbor, MI 48104</p>"},{"location":"contact/#support-hours","title":"Support Hours","text":"<p>Monday to Friday: 9:00 AM \u2013 5:00 PM (EST) Saturday &amp; Sunday: Closed</p> <p>Thank you for reaching out to us. We'll respond to your message as soon as possible!</p>"},{"location":"faq/","title":"Frequently Asked Questions (FAQ)","text":"<p>This page will be updated soon with answers to the most common questions about using the ProbeTruth API and platform.</p> <p>Stay tuned!</p>"},{"location":"generate_report/","title":"Generate Forensic Report","text":"<p>After completing the media inspection, you can generate a comprehensive PDF report summarizing the results of the deepfake detection process. This report can be downloaded and printed for legal, forensic, or internal documentation purposes.</p>"},{"location":"generate_report/#how-it-works","title":"How It Works","text":"<p>Once the media has been analyzed and predictions are available, clicking the \"Generate Report\" button will:</p> <ol> <li>Compile all analysis results.</li> <li>Structure the content into a formal forensic report.</li> <li>Provide a downloadable PDF file with optional print support.</li> </ol>"},{"location":"generate_report/#report-contents","title":"Report Contents","text":"<p>The generated report includes the following sections:</p>"},{"location":"generate_report/#1-general-information","title":"1. General Information","text":"<ul> <li>Media ID</li> <li>Upload timestamp</li> <li>Media type (video, audio, image)</li> <li>File name and format</li> <li>User or API key identifier (if applicable)</li> </ul>"},{"location":"generate_report/#2-metadata-extraction","title":"2. Metadata Extraction","text":"<ul> <li>Resolution / duration / size</li> <li>File properties and encoding format</li> <li>Hash or unique media signature</li> </ul>"},{"location":"generate_report/#3-model-analysis-summary","title":"3. Model Analysis Summary","text":"<ul> <li>List of models used for analysis</li> <li>Individual predictions with confidence scores</li> <li>Verdicts (e.g., Authentic / Deepfake)</li> </ul>"},{"location":"generate_report/#4-explanation-evidence","title":"4. Explanation &amp;  Evidence","text":"<ul> <li>Key frame thumbnails (for video/image)</li> <li>Audio waveform or spectrogram (for audio)</li> <li>Highlighted anomalies (if supported)</li> </ul>"},{"location":"generate_report/#5-final-verdict","title":"5. Final Verdict","text":"<ul> <li>Overall decision (e.g., Deepfake Detected)</li> <li>Confidence level</li> <li>Timestamp of decision</li> </ul> <p>The report is digitally signed and watermarked with the ProbeTruth seal to ensure authenticity.</p>"},{"location":"generate_report/#download-print","title":"Download &amp; Print","text":"<ul> <li>The generated report is available in PDF format.</li> <li>Users can download or print directly from the browser.</li> <li>Reports can also be accessed later via the media history panel (if enabled).</li> </ul>"},{"location":"getting-started/","title":"Getting Started","text":"<p>Welcome to ProbeTruth \u2014 your trusted solution for detecting deepfakes and protecting digital identity.</p> <p>This guide walks you through the basic steps to start using the ProbeTruth platform, whether you\u2019re a legal investigator, journalist, or individual user seeking truth in digital content.</p>"},{"location":"getting-started/#who-can-use-probetruth","title":"Who Can Use ProbeTruth?","text":"<p>ProbeTruth is designed for:</p> <ul> <li>General users needing one-time verification of media.</li> <li>Legal professionals and investigators handling digital evidence.</li> <li>Organizations looking for automated, scalable deepfake detection via dashboards or APIs.</li> </ul>"},{"location":"getting-started/#step-by-step-guide","title":"Step-by-Step Guide","text":""},{"location":"getting-started/#1-create-an-account","title":"1. Create an Account","text":"<p>Choose one of the following:</p> <ul> <li>Paid Subscription: Unlock full access with a personalized dashboard and file history.</li> <li>One-Time Use: Use our limited, quick-access upload service \u2014 no account needed.</li> </ul> <p>\ud83d\udca1 API access requires a subscription and an API key.</p>"},{"location":"getting-started/#2-upload-your-media","title":"2. Upload Your Media","text":"<ul> <li>Log in to your dashboard or use the public upload page.</li> <li>Select your media file(s) for inspection \u2014 video, audio, or image formats are supported.</li> </ul>"},{"location":"getting-started/#3-wait-for-analysis","title":"3. Wait for Analysis","text":"<ul> <li>Our AI pipeline processes your media using multiple deepfake detection models.</li> <li>Most results are returned within a few minutes.</li> <li>Progress and status updates are visible in the dashboard (for subscribers).</li> </ul>"},{"location":"getting-started/#4-download-your-report","title":"4. Download Your Report","text":"<ul> <li>Once complete, a detailed forensic report is generated.</li> <li>Reports include authenticity verdicts, visual evidence, metadata, and model decisions.</li> <li>Download or share securely via your dashboard.</li> </ul>"},{"location":"getting-started/#api-access-for-developers-and-b2b-clients","title":"API Access (For Developers and B2B Clients)","text":"<ul> <li>Subscribers with a valid API key can use our RESTful API to automate uploads and receive results.</li> <li>API documentation is available here.</li> </ul>"},{"location":"getting-started/#business-subscription-options","title":"Business &amp; Subscription Options","text":"<p>ProbeTruth offers tailored solutions for businesses: - B2B SaaS Access: Scalable platform access with usage-based billing. - White Labeling: Customize our platform under your brand with full API and dashboard integration.</p> <p>Contact demo@probetruth.ai to discuss your business needs.</p>"},{"location":"getting-started/#next-steps","title":"Next Steps","text":"<ul> <li>Explore the API Reference</li> <li>Learn about our Detection Models</li> <li>Review our Security Practices</li> </ul> <p>Need help? Contact us anytime at support@probetruth.ai</p>"},{"location":"inspect_media/","title":"Media Inspection","text":"<p>Once a media file is successfully uploaded using the <code>POST /v1/media/upload</code> endpoint, you can initiate deepfake analysis through the \"Inspect Media\" action in the ProbeTruth interface.</p> <p>This process automatically triggers backend analysis using multiple AI models, depending on the type of uploaded media (video, audio, or image). No additional API call or input parameters are required at this step.</p>"},{"location":"inspect_media/#workflow","title":"Workflow","text":"<ol> <li> <p>Upload Media    Upload a video, audio, or image file using the <code>/v1/media/upload</code> endpoint.</p> </li> <li> <p>Inspect Media    After upload, click the \"Inspect Media\" button in the ProbeTruth dashboard. This triggers backend analysis.</p> </li> <li> <p>Model Processing    Based on the type of media:</p> </li> <li>Visual models are run for images/videos.</li> <li>Audio models for audio clips.</li> <li>Audiovisual models for eligible media types.</li> </ol> <p>Each model processes the file in parallel or sequentially, depending on configuration.</p> <ol> <li>Live Feedback </li> <li>During analysis, a status bar or loading icon is shown.</li> <li>Once complete, the frontend displays predictions and confidence scores.</li> </ol>"},{"location":"inspect_media/#backend-behavior","title":"Backend Behavior","text":"<ul> <li>The system automatically selects the appropriate models based on the uploaded media type.</li> <li>No additional input parameters are required.</li> <li>The analysis status is updated in real time.</li> </ul>"},{"location":"inspect_media/#example-response-gui-display","title":"Example Response (GUI Display)","text":"Model Confidence Verdict VisualNet V2 93.2% Deepfake AudioAnalyzer X 98.7% Authentic Fusion AI 95.1% Deepfake <p>Final Decision: Deepfake Detected</p>"},{"location":"inspect_media/#next-step-generate-report","title":"Next Step: Generate Report","text":"<p>Once the inspection is complete, users can click on the \"Generate Report\" button to receive a downloadable PDF forensic report containing:</p> <ul> <li>Metadata</li> <li>Model decisions</li> <li>Confidence scores</li> <li>Visual evidence (if available)</li> </ul>"},{"location":"models/","title":"Detection Models","text":"<p>ProbeTruth leverages a suite of advanced AI models to detect deepfakes across visual, audio, and audiovisual domains. Each model targets specific forgery cues using state-of-the-art machine learning techniques.</p>"},{"location":"models/#audiovisual-model","title":"Audiovisual Model","text":""},{"location":"models/#darl-v10","title":"DARL (v1.0)","text":"<ul> <li>Type: Audiovisual</li> <li>Focus: Speech-Lips Synchronization</li> <li>Description: DARL analyzes the temporal alignment between speech audio and corresponding lip movements in video. It flags inconsistencies that are indicative of synthetic tampering or lip-sync manipulation.</li> </ul>"},{"location":"models/#visual-models","title":"Visual Models","text":""},{"location":"models/#dbag-net-v10","title":"DBaG-Net (v1.0)","text":"<ul> <li>Type: Visual</li> <li>Focus: Facial Geometry</li> <li>Description: DBaG-Net detects abnormalities in facial proportions, landmarks, and geometric consistency that are often introduced by deepfake generation processes.</li> </ul>"},{"location":"models/#atten-vit-v10","title":"Atten-ViT (v1.0)","text":"<ul> <li>Type: Visual</li> <li>Focus: Spatial Artifacts</li> <li>Description: Based on Vision Transformers, Atten-ViT captures subtle pixel-level and regional inconsistencies, such as unnatural textures or blending errors in forged images or video frames.</li> </ul>"},{"location":"models/#audio-models","title":"Audio Models","text":""},{"location":"models/#audio-rrl-v10","title":"Audio-RRL (v1.0)","text":"<ul> <li>Type: Aural</li> <li>Focus: Spectro-temporal Artifacts</li> <li>Description: Audio-RRL identifies temporal inconsistencies and unnatural frequency patterns in audio, which may result from voice synthesis or manipulation techniques.</li> </ul>"},{"location":"models/#psa-net-v10","title":"PSA-Net (v1.0)","text":"<ul> <li>Type: Aural</li> <li>Focus: Spectral Artifacts</li> <li>Description: PSA-Net focuses on spectral analysis to detect discrepancies in voice patterns and harmonics, useful in identifying audio deepfakes.</li> </ul>"},{"location":"models/#spot-net-v10","title":"Spot-Net (v1.0)","text":"<ul> <li>Type: Aural</li> <li>Focus: Temporal Artifacts</li> <li>Description: Spot-Net examines voice continuity and timing to detect breaks, delays, or unnatural speech patterns introduced by tampering or generation models.</li> </ul>"},{"location":"models/#model-selection","title":"Model Selection","text":"<p>The appropriate model(s) are automatically selected based on the uploaded media type: - Video \u2192 Audiovisual + Visual + Audio Models - Image \u2192 Visual Models only - Audio \u2192 Audio Models only</p> <p>Each model contributes its prediction and confidence score to the final decision.</p>"},{"location":"security/","title":"Security &amp; Privacy","text":"<p>At ProbeTruth, safeguarding your data and privacy is at the core of our platform. We are committed to providing a secure, trustworthy environment for detecting deepfakes and protecting digital identity.</p>"},{"location":"security/#data-handling","title":"Data Handling","text":"<ul> <li>End-to-End Encryption: All media uploads and API requests are encrypted using HTTPS (TLS 1.2+).</li> <li>Temporary Storage: Uploaded media files are stored only for the duration required to complete analysis.</li> <li>Automatic Deletion: Media files are automatically deleted after inspection and report generation, unless retention is explicitly enabled by the user.</li> </ul>"},{"location":"security/#model-isolation","title":"Model Isolation","text":"<ul> <li>Each AI detection model runs in a sandboxed environment to prevent cross-contamination and ensure privacy.</li> <li>No raw media data is shared with external systems or third-party services.</li> </ul>"},{"location":"security/#audit-compliance","title":"Audit &amp; Compliance","text":"<ul> <li>ProbeTruth maintains internal audit logs for critical API events and model decisions.</li> <li>We adhere to data protection standards aligned with GDPR and CCPA requirements.</li> </ul>"},{"location":"security/#api-security","title":"API Security","text":"<ul> <li>API Keys: All endpoints require authentication via secure API keys.</li> <li>Rate Limiting: To prevent abuse, API usage is rate-limited and monitored.</li> <li>Token Expiry: Temporary access tokens (when used) expire automatically to reduce risk.</li> </ul>"},{"location":"security/#integrity-protection","title":"Integrity Protection","text":"<ul> <li>Hash Verification: Media file integrity is checked using SHA-256 hash comparison during upload.</li> <li>Tamper Detection: We monitor anomalies in model execution that may indicate malicious inputs.</li> </ul>"},{"location":"security/#questions","title":"Questions?","text":"<p>For inquiries related to security or privacy compliance, contact our security team at:</p> <p>security@probetruth.ai</p>"},{"location":"api/api_reference/","title":"API Reference","text":"<p>Welcome to the ProbeTruth API Reference. This section provides an organized overview of all the available endpoints used to interact with the ProbeTruth deepfake detection system.</p> <p>All endpoints below are prefixed with this base URL.</p>"},{"location":"api/api_reference/#authentication","title":"Authentication","text":"<p>All API requests must include a valid API key in the header:</p> <p>Refer to the Authentication Guide for full details.</p>"},{"location":"api/api_reference/#upload-media","title":"Upload Media","text":"<p>Upload a video, audio, or image file for analysis.</p> <p>Endpoint: <code>POST /v1/media/upload</code> View full documentation \u2192</p>"},{"location":"api/api_reference/#inspect-media","title":"Inspect Media","text":"<p>Trigger forensic inspection on previously uploaded media.</p> <p>Endpoint: <code>POST /v1/media/inspect</code> View full documentation \u2192</p>"},{"location":"api/api_reference/#generate-forensic-report","title":"Generate Forensic Report","text":"<p>Retrieve a detailed report after inspection is completed.</p> <p>Endpoint: <code>GET /v1/media/report/{media_id}</code> View full documentation \u2192</p>"},{"location":"api/authentication/","title":"Authentication","text":""},{"location":"api/authentication/#api-authentication","title":"API Authentication","text":"<p>All requests to the ProbeTruth API must be authenticated using secure, token-based authentication provided by Amazon Cognito. This ensures robust, scalable access control to our deepfake detection services.</p> <p>We no longer support static API keys for production access due to security and scalability limitations.</p>"},{"location":"api/authentication/#overview-of-authentication-flow","title":"Overview of Authentication Flow","text":"<ol> <li>Clients authenticate using Amazon Cognito and obtain a JWT access token.</li> <li>Clients include this token in the <code>Authorization</code> header when calling any protected API endpoint.</li> <li>API Gateway validates the token before forwarding the request to the backend (e.g., Lambda, ECS, or SageMaker model).</li> </ol>"},{"location":"api/authentication/#getting-access","title":"Getting Access","text":"<p>To gain access to the ProbeTruth API:</p> <ol> <li>Contact us at demo@probetruth.ai to request API access.</li> <li>We\u2019ll provision access to a Cognito User Pool and send you the necessary credentials (Client ID, Pool ID, Region).</li> <li>You can authenticate via:<ul> <li>Hosted UI (Login page hosted by Cognito)</li> <li>Directly using SDKs like AWS Amplify or Amazon Cognito Identity SDK.</li> </ul> </li> </ol>"},{"location":"api/authentication/#token-based-authentication","title":"Token-Based Authentication","text":"<p>Once authenticated, your client will receive a JWT access token from Cognito.</p> <p>Include this token in the <code>Authorization</code> header of all API requests:</p> <p>Authorization: Bearer <code>&lt;your_jwt_token_here&gt;</code></p> <p>The token is automatically validated by our API Gateway Authorizer before any request is forwarded to the inference engine.</p>"},{"location":"api/authentication/#example-python-jwt","title":"Example (Python + JWT)","text":"<pre><code>import requests\n\nJWT_TOKEN = 'your_jwt_access_token_here'\nAPI_URL = 'https://api.probetruth.ai/v1/report-status'\n\nheaders = {\n'Authorization': f'Bearer {JWT_TOKEN}'\n}\n\nresponse = requests.get(API_URL, headers=headers)\n\nif response.ok:\nprint(\"Success:\", response.json())\nelse:\nprint(\"Error:\", response.status_code, response.text)\n</code></pre>"},{"location":"api/authentication/#authenticating-with-cognito","title":"Authenticating with Cognito","text":"<p>To get a token, you can authenticate with Cognito using:</p>"},{"location":"api/authentication/#option-a-hosted-ui-oauth2-login","title":"Option A: Hosted UI (OAuth2 Login)","text":"<p>You\u2019ll be redirected to a Cognito-hosted login page. Upon login, Cognito redirects you back to your app with a token.</p>"},{"location":"api/authentication/#option-b-programmatic-login-for-cli-or-backend-clients","title":"Option B: Programmatic Login (for CLI or backend clients)","text":"<p>You can use the AWS Cognito Identity SDK:</p> <pre><code>import boto3\n\nclient = boto3.client('cognito-idp', region_name='your-region')\n\nresponse = client.initiate_auth(\nClientId='your_cognito_client_id',\nAuthFlow='USER_PASSWORD_AUTH',\nAuthParameters={\n'USERNAME': 'your_username',\n'PASSWORD': 'your_password'\n}\n)\n\njwt_token = response['AuthenticationResult']['AccessToken']\n</code></pre>"},{"location":"api/authentication/#security-best-practices","title":"Security Best Practices","text":"<ul> <li>Never expose your token in frontend JavaScript or public repositories.</li> <li>Rotate credentials periodically.</li> </ul>"},{"location":"api/authentication/#coming-soon","title":"Coming Soon","text":"<ul> <li>OAuth2 scope-based permission control (e.g., <code>read:reports</code>, <code>submit:job</code>)</li> <li>Multi-tenant access via Cognito User Groups and Roles</li> <li>Temporary session tokens via AWS STS for advanced clients</li> </ul>"},{"location":"api/generate_report/","title":"Generate Forensic Report","text":"<p>After completing the media inspection (see Initiate Media Inspection Endpoints), you can generate a comprehensive PDF report summarizing the results of the deepfake detection process. This report can be downloaded and printed for legal, forensic, or internal documentation purposes.</p>"},{"location":"api/generate_report/#endpoint","title":"Endpoint","text":"<p>POST https://api.probetruth.ai/v1/report/generate</p>"},{"location":"api/generate_report/#authentication","title":"Authentication","text":"<p>This endpoint requires JWT-based token authentication via AWS Cognito.</p> <p>Include the access token in the <code>Authorization</code> header.</p> <p>Authorization: Bearer &lt;your_jwt_token_here&gt;</p>"},{"location":"api/generate_report/#headers","title":"Headers","text":"Key Value <code>Authorization</code> <code>Bearer &lt;your_jwt_token_here&gt;</code> <code>Content-Type</code> <code>application/json</code> <code>Accept</code> <code>application/pdf</code> <p>Note: The <code>Accept: application/pdf</code> header informs the server that the client expects a PDF file in the response.</p>"},{"location":"api/generate_report/#request-body","title":"Request Body","text":"Field Type Required Description <code>media_id</code> <code>string</code> Yes The unique ID of the media file to generate the report for. <p>Content-Type: <code>application/json</code></p>"},{"location":"api/generate_report/#example-request","title":"Example Request","text":"<pre><code>curl -X POST [https://api.probetruth.ai/v1/report/generate](https://api.probetruth.ai/v1/report/generate) \\\n  -H \"Authorization: Bearer &lt;your_jwt_token_here&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -H \"Accept: application/pdf\" \\\n  -d '{\"media_id\": \"b91c0fe3-523d-4d3a-9e0e-17cc81c513ab\"}'\n</code></pre>"},{"location":"api/generate_report/#response","title":"Response","text":"<p>Success Response (HTTP 200 OK)</p> <p>The PDF file will be directly streamed in the response body with the <code>Content-Type: application/pdf</code> header.</p> <p>Example Success Response (Illustrative - Binary Data)</p> <pre><code>%PDF-1.7\n1 0 obj\n... (binary PDF data) ...\n%%EOF\n</code></pre> <p>Error Responses</p> HTTP Status Code Response Body (JSON) Description <code>401 Unauthorized</code> <code>json { \"error\": \"Unauthorized\", \"message\": \"Invalid or missing token.\" }</code> Authentication failed. Ensure a valid JWT token is provided. <code>400 Bad Request</code> <code>json { \"error\": \"Bad Request\", \"message\": \"The 'media_id' field is required.\" }</code> The <code>media_id</code> field is missing in the request body. <code>404 Not Found</code> <code>json { \"error\": \"Not Found\", \"message\": \"Media with ID 'invalid-id' not found or analysis not completed.\" }</code> The specified <code>media_id</code> does not exist or the analysis for it is not yet complete. <code>500 Internal Server Error</code> <code>json { \"error\": \"Internal Server Error\", \"message\": \"Failed to generate report.\" }</code> An unexpected error occurred on the server while generating the report."},{"location":"api/generate_report/#request-example-python","title":"Request Example (Python)","text":"<pre><code>import requests\n\nAPI_TOKEN = 'your_jwt_token_here'\nMEDIA_ID = 'b91c0fe3-523d-4d3a-9e0e-17cc81c513ab'\n\nheaders = {\n    'Authorization': f'Bearer {API_TOKEN}',\n    'Content-Type': 'application/json',\n    'Accept': 'application/pdf'\n}\n\ndata = {\n    'media_id': MEDIA_ID\n}\n\nresponse = requests.post('[https://api.probetruth.ai/v1/report/generate](https://api.probetruth.ai/v1/report/generate)', headers=headers, json=data, stream=True)\n\nif response.status_code == 200:\n    with open(f'forensic_report_{MEDIA_ID}.pdf', 'wb') as pdf_file:\n        for chunk in response.iter_content(chunk_size=8192):\n            pdf_file.write(chunk)\n    print(f\"Report for media ID '{MEDIA_ID}' downloaded successfully.\")\nelse:\n    print(f\"Error generating report for media ID '{MEDIA_ID}':\", response.status_code, response.text)\n</code></pre>"},{"location":"api/generate_report/#developer-notes","title":"Developer Notes","text":"<ul> <li>This endpoint returns the PDF file directly in the response body as a binary stream. Ensure your client-side code is capable of handling binary data.</li> <li>The <code>Accept: application/pdf</code> header is crucial for indicating the expected response format.</li> <li>Always check the <code>analysis_status</code> to ensure the analysis is complete before attempting to generate a report.</li> <li>Error handling is essential to manage scenarios where the media ID is invalid or the report generation fails.</li> </ul>"},{"location":"api/inspect_media/","title":"Inspect Media","text":"<p>Once a media file is successfully uploaded using the Upload Media Endpoints, you can initiate deepfake analysis by calling the dedicated inspection endpoint for the specific media type and providing the <code>upload_id</code> in the request body.</p> <p>There are separate endpoints to trigger the inspection process based on the type of uploaded media.</p>"},{"location":"api/inspect_media/#1-inspect-video","title":"1. Inspect Video","text":"<p>The <code>POST /v1/media/inspect/video</code> endpoint triggers the deepfake analysis pipeline for a previously uploaded video.</p> <p>Endpoint:  POST https://api.probetruth.ai/v1/media/inspect/video</p>"},{"location":"api/inspect_media/#authentication","title":"Authentication","text":"<p>This endpoint requires JWT-based token authentication via AWS Cognito.</p> <p>Include the access token in the <code>Authorization</code> header.</p> <p>Authorization: Bearer <code>&lt;your_jwt_token_here&gt;</code></p>"},{"location":"api/inspect_media/#request-body","title":"Request Body","text":"Field Type Required Description <code>upload_id</code> string Yes The unique ID of the uploaded video file. <p>Content-Type: <code>application/json</code></p>"},{"location":"api/inspect_media/#example-request","title":"Example Request","text":"<pre><code>curl -X POST [https://www.google.com/search?q=https://api.probetruth.ai/v1/media/inspect/video]\n(https://www.google.com/search?q=https://api.probetruth.ai/v1/media/inspect/video) \\\n  -H \"Authorization: Bearer &lt;your_jwt_token_here&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"upload_id\": \"b91c0fe3-523d-4d3a-9e0e-17cc81c513ab\"}'\n</code></pre> <p>Example Success Response (Inspection Initiated)</p> <pre><code>{\n  \"upload_id\": \"b91c0fe3-523d-4d3a-9e0e-17cc81c513ab\",\n  \"media_type\": \"video\",\n  \"analysis_status\": \"queued\",\n  \"message\": \"Video inspection initiated.\"\n}\n</code></pre> <p>Example Error Response (Authentication Failed)</p> <pre><code>{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Invalid or missing token.\"\n}\n</code></pre> <p>Example Error Response (Missing upload_id in Request Body)</p> <pre><code>{\n  \"error\": \"Bad Request\",\n  \"message\": \"The 'upload_id' field is required in the request body.\"\n}\n</code></pre> <p>Example Error Response (Invalid upload_id)</p> <pre><code>{\n  \"error\": \"Not Found\",\n  \"message\": \"Video with upload ID 'invalid-id' not found.\"\n}\n</code></pre> <p>Example Error Response (Incorrect Media Type)</p> <pre><code>{\n  \"error\": \"Invalid Request\",\n  \"message\": \"Upload ID 'some-id' does not correspond to a video file.\"\n}\n</code></pre>"},{"location":"api/inspect_media/#1-inspect-audio","title":"1. Inspect Audio","text":"<p>The POST /v1/media/inspect/audio endpoint triggers the deepfake analysis pipeline for a previously uploaded audio file.</p> <p>Endpoint:  POST https://api.probetruth.ai/v1/media/inspect/audio This endpoint requires JWT-based token authentication via AWS Cognito.</p>"},{"location":"api/inspect_media/#authentication_1","title":"Authentication","text":"<p>This endpoint requires JWT-based token authentication via AWS Cognito.</p> <p>Include the access token in the <code>Authorization</code> header.</p> <p>Authorization: Bearer <code>&lt;your_jwt_token_here&gt;</code></p>"},{"location":"api/inspect_media/#request-body_1","title":"Request Body","text":"Field Type Required Description <code>upload_id</code> string Yes The unique ID of the uploaded video file. <p>Content-Type: <code>application/json</code></p>"},{"location":"api/inspect_media/#example-request_1","title":"Example Request","text":"<pre><code>curl -X POST [https://api.probetruth.ai/v1/media/inspect/audio](https://api.probetruth.ai/v1/media/inspect/audio) \\\n  -H \"Authorization: Bearer &lt;your_jwt_token_here&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"upload_id\": \"845f9ac7-9a71-4fcb-8e25-2b7234c6e3fc\"}'\n</code></pre> <p>Example Success Response (Inspection Initiated)</p> <pre><code>{\n  \"upload_id\": \"845f9ac7-9a71-4fcb-8e25-2b7234c6e3fc\",\n  \"media_type\": \"audio\",\n  \"analysis_status\": \"queued\",\n  \"message\": \"Audio inspection initiated.\"\n}\n</code></pre> <p>Example Error Response (Authentication Failed)</p> <pre><code>{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Invalid or missing token.\"\n}\n</code></pre> <p>Example Error Response (Missing upload_id in Request Body)</p> <pre><code>{\n  \"error\": \"Bad Request\",\n  \"message\": \"The 'upload_id' field is required in the request body.\"\n}\n</code></pre> <p>Example Error Response (Invalid upload_id)</p> <pre><code>{\n  \"error\": \"Not Found\",\n  \"message\": \"Audio with upload ID 'invalid-id' not found.\"\n}\n</code></pre> <p>Example Error Response (Incorrect Media Type)</p> <pre><code>{\n  \"error\": \"Invalid Request\",\n  \"message\": \"Upload ID 'some-id' does not correspond to an audio file.\"\n}\n</code></pre>"},{"location":"api/inspect_media/#1-inspect-image","title":"1. Inspect Image","text":"<p>The POST /v1/media/inspect/image endpoint triggers the deepfake analysis pipeline for a previously uploaded image file.</p> <p>Endpoint:  POST https://api.probetruth.ai/v1/media/inspect/image</p>"},{"location":"api/inspect_media/#authentication_2","title":"Authentication","text":"<p>This endpoint requires JWT-based token authentication via AWS Cognito.</p> <p>Include the access token in the <code>Authorization</code> header.</p> <p>Authorization: Bearer <code>&lt;your_jwt_token_here&gt;</code></p>"},{"location":"api/inspect_media/#request-body_2","title":"Request Body","text":"Field Type Required Description <code>upload_id</code> string Yes The unique ID of the uploaded video file. <p>Content-Type: <code>application/json</code></p>"},{"location":"api/inspect_media/#example-request_2","title":"Example Request","text":"<pre><code>curl -X POST [https://api.probetruth.ai/v1/media/inspect/image](https://api.probetruth.ai/v1/media/inspect/image) \\\n  -H \"Authorization: Bearer &lt;your_jwt_token_here&gt;\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"upload_id\": \"132e894e-772e-4a7e-8617-d6765f982032\"}'\n</code></pre> <p>Example Success Response (Inspection Initiated)</p> <pre><code>{\n  \"upload_id\": \"132e894e-772e-4a7e-8617-d6765f982032\",\n  \"media_type\": \"image\",\n  \"analysis_status\": \"queued\",\n  \"message\": \"Image inspection initiated.\"\n}\n</code></pre> <p>Example Error Response (Authentication Failed)</p> <pre><code>{\n  \"error\": \"Unauthorized\",\n  \"message\": \"Invalid or missing token.\"\n}\n</code></pre> <p>Example Error Response (Missing upload_id in Request Body)</p> <pre><code>{\n  \"error\": \"Bad Request\",\n  \"message\": \"The 'upload_id' field is required in the request body.\"\n}\n</code></pre> <p>Example Error Response (Invalid upload_id)</p> <pre><code>{\n  \"error\": \"Not Found\",\n  \"message\": \"Image with upload ID 'invalid-id' not found.\"\n}\n</code></pre> <p>Example Error Response (Incorrect Media Type)</p> <pre><code>{\n  \"error\": \"Invalid Request\",\n  \"message\": \"Upload ID 'some-id' does not correspond to an image file.\"\n}\n</code></pre>"},{"location":"api/models/","title":"Detection Models","text":"<p>ProbeTruth leverages a suite of advanced AI models to detect deepfakes across visual, audio, and audiovisual domains. Each model targets specific forgery cues using state-of-the-art machine learning techniques.</p>"},{"location":"api/models/#audiovisual-model","title":"Audiovisual Model","text":""},{"location":"api/models/#darl-v10","title":"DARL (v1.0)","text":"<ul> <li>Type: Audiovisual</li> <li>Focus: Speech-Lips Synchronization</li> <li>Description: DARL analyzes the temporal alignment between speech audio and corresponding lip movements in video. It flags inconsistencies that are indicative of synthetic tampering or lip-sync manipulation.</li> </ul>"},{"location":"api/models/#visual-models","title":"Visual Models","text":""},{"location":"api/models/#dbag-net-v10","title":"DBaG-Net (v1.0)","text":"<ul> <li>Type: Visual</li> <li>Focus: Facial Geometry</li> <li>Description: DBaG-Net detects abnormalities in facial proportions, landmarks, and geometric consistency that are often introduced by deepfake generation processes.</li> </ul>"},{"location":"api/models/#atten-vit-v10","title":"Atten-ViT (v1.0)","text":"<ul> <li>Type: Visual</li> <li>Focus: Spatial Artifacts</li> <li>Description: Based on Vision Transformers, Atten-ViT captures subtle pixel-level and regional inconsistencies, such as unnatural textures or blending errors in forged images or video frames.</li> </ul>"},{"location":"api/models/#audio-models","title":"Audio Models","text":""},{"location":"api/models/#audio-rrl-v10","title":"Audio-RRL (v1.0)","text":"<ul> <li>Type: Aural</li> <li>Focus: Spectro-temporal Artifacts</li> <li>Description: Audio-RRL identifies temporal inconsistencies and unnatural frequency patterns in audio, which may result from voice synthesis or manipulation techniques.</li> </ul>"},{"location":"api/models/#psa-net-v10","title":"PSA-Net (v1.0)","text":"<ul> <li>Type: Aural</li> <li>Focus: Spectral Artifacts</li> <li>Description: PSA-Net focuses on spectral analysis to detect discrepancies in voice patterns and harmonics, useful in identifying audio deepfakes.</li> </ul>"},{"location":"api/models/#spot-net-v10","title":"Spot-Net (v1.0)","text":"<ul> <li>Type: Aural</li> <li>Focus: Temporal Artifacts</li> <li>Description: Spot-Net examines voice continuity and timing to detect breaks, delays, or unnatural speech patterns introduced by tampering or generation models.</li> </ul>"},{"location":"api/models/#model-selection","title":"Model Selection","text":"<p>The appropriate model(s) are automatically selected based on the uploaded media type: - Video \u2192 Audiovisual + Visual + Audio Models - Image \u2192 Visual Models only - Audio \u2192 Audio Models only</p> <p>Each model contributes its prediction and confidence score to the final decision.</p>"},{"location":"api/upload/","title":"Upload Media","text":"<p>The <code>POST /v1/media/upload</code> endpoint allows you to upload media for deepfake analysis. This is the first step in the ProbeTruth detection pipeline.</p> <p>You can upload videos, audio, or images for forensic evaluation.</p>"},{"location":"api/upload/#endpoint","title":"Endpoint","text":"<p><code>POST https://api.probetruth.ai/v1/media/upload</code></p>"},{"location":"api/upload/#authentication","title":"Authentication","text":"<p>This endpoint requires a valid API key. Include it in the <code>Authorization</code> header:</p> <p><code>Authorization: Bearer YOUR_API_KEY</code></p>"},{"location":"api/upload/#supported-media-types","title":"Supported Media Types","text":"<ul> <li>\u2014 Video <code>.mp4</code> <code>.mkv</code> <code>.avi</code> <code>.mov</code> <code>.wmv</code> <code>.flv</code> <code>.webm</code> </li> <li>\u2014 Audio <code>.mp3</code> <code>.wav</code> <code>.aac</code> <code>.flac</code> </li> <li>\u2014 Image <code>.jpg</code> <code>.png</code> <code>.bmp</code> <code>.tiff</code> </li> </ul>"},{"location":"api/upload/#headers","title":"Headers","text":"Key Value Authorization Bearer <code>&lt;your_jwt_token_here&gt;</code> Content-Type multipart/form-data"},{"location":"api/upload/#request-body","title":"Request Body","text":"Field Type Required Description file file Yes The media file to be analyzed media_type string Yes Must be one of: <code>video</code>, <code>audio</code>, <code>image</code> filename string No Optional custom name for the upload"},{"location":"api/upload/#example-upload-video","title":"Example: Upload Video","text":"<pre><code>curl -X POST https://api.probetruth.ai/v1/media/upload \\\n  -H \"Authorization: Bearer &lt;your_jwt_token_here&gt;\" \\\n  -F \"file=@/path/to/your/video.mp4\" \\\n  -F \"media_type=video\"\n</code></pre> <p>Response</p> <pre><code>{\n  \"upload_id\": \"b91c0fe3-523d-4d3a-9e0e-17cc81c513ab\",\n  \"media_type\": \"video\",\n  \"status\": \"uploaded\",\n  \"message\": \"Video successfully uploaded and queued for analysis.\"\n}\n</code></pre>"},{"location":"api/upload/#example-upload-audio","title":"Example: Upload Audio","text":"<pre><code>curl -X POST https://api.probetruth.ai/v1/media/upload \\\n  -H \"Authorization: Bearer &lt;your_jwt_token_here&gt;\" \\\n  -F \"file=@/path/to/your/audio.wav\" \\\n  -F \"media_type=audio\"\n</code></pre> <p>Response</p> <pre><code>{\n  \"upload_id\": \"845f9ac7-9a71-4fcb-8e25-2b7234c6e3fc\",\n  \"media_type\": \"audio\",\n  \"status\": \"uploaded\",\n  \"message\": \"Audio successfully uploaded and queued for analysis.\"\n}\n</code></pre>"},{"location":"api/upload/#example-upload-image","title":"Example: Upload Image","text":"<pre><code>curl -X POST https://api.probetruth.ai/v1/media/upload \\\n  -H \"Authorization: Bearer &lt;your_jwt_token_here&gt;\" \\\n  -F \"file=@/path/to/your/image.jpg\" \\\n  -F \"media_type=image\"\n</code></pre> <p>Response</p> <pre><code>{\n  \"upload_id\": \"132e894e-772e-4a7e-8617-d6765f982032\",\n  \"media_type\": \"image\",\n  \"status\": \"uploaded\",\n  \"message\": \"Image successfully uploaded and queued for analysis.\"\n}\n</code></pre>"},{"location":"api/upload/#error-responses","title":"Error Responses","text":"<p>All endpoints return these common error responses:</p> <p>400 Bad Request</p> <pre><code>{\n  \"error\": \"Invalid file type\",\n  \"allowed_types\": [\"mp4\", \"mp3\", ...]\n}\n</code></pre> <p>401 Unauthorized</p> <pre><code>{\n  \"error\": \"Invalid authentication token\"\n}\n</code></pre> <p>413 Payload Too Large</p> <pre><code>{\n  \"error\": \"File size exceeds 100MB limit\"\n}\n</code></pre>"},{"location":"api/upload/#next-step","title":"Next Step","text":"<p>Once uploaded, use the returned <code>upload_id</code> to query analysis results:</p> <pre><code>GET /v1/report-status?upload_id=&lt;upload_id&gt;\n</code></pre>"},{"location":"api/upload/#developer-notes","title":"Developer Notes","text":"<ul> <li>Use unique filenames to avoid collisions in downstream processing.</li> <li>Media larger than 500MB may fail to upload depending on server-side configuration.</li> <li>Accepted media types are validated on the backend. If you're unsure, validate the file type before uploading.</li> <li>After uploading, you will receive a media_id used in subsequent API calls (inspect, generate report, etc.).</li> </ul>"}]}